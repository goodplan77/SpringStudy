<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--
		* root-context.xml
		어플리케이션 구동과 동시에 web.xml 문서를 거쳐서 바로 로딩되는 문서.
		= 어플리케이션 시작과 동시에 설정해야하는 내용들을 작성
		ex) db연결 , 트랜잭션 제어 설정
	 -->
	 
	 <!-- DB연결설정 3단계 -->
	 <!--
	 	1단계 DB연결을 위한 도구 설정
	 	BasicDataSource dataSource = new BasicDataSource();
	 	dataSource.driverClassName("oracle.jdbc.driver.OracleDriver");
	 	property : set 함수 호출?
	 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="realDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="C##SPRING"/>
		<property name="password" value="SPRING"/>
	</bean>
	
	<bean id = "dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"></constructor-arg>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value='[SQL]'/>
			</bean>
		</property>
	</bean>
	
	<!--
		2단계 Mybatis Spring에서 제공하는 SQL명령어 실행을 위한 도구 등록(SqlSessionFactory생성)
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
		sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
		sqlSessionFactory.setDataSource(dataSource);
	-->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	
		<!-- 연결을 위한 도구로 생성한 bean객체의 id 제시 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 매퍼 등록 : 앞으로 생성할 모든 mapper 파일을 한번에 읽어 올 수 있음 -->
		<!-- ** : 하위 디렉토리 전체 포함 -->
		<property name="mapperLocations" value="classpath:mapper/**/*.xml"/>
	</bean>
	
	<!--
		3단계 SQL구문을 위한 탬플릿을 제공하는 도구 등록
	-->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- sqlSession 얻어내기위한 도구 설정 -->
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!--
		property : setter 방식으로 값을 주입
		ex) name = "url" -> setUrl(value)
		
		constructor-arg : 생성자 방식으로 값을 주입
		ex) new Bean객체(value/ref값)
	-->
	
	<bean id='transactionManager' class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="realDataSource"/>
	</bean>
	
	 <!-- DB연결 끝 -->
	 
	 <!-- 업로드 되는 파일에 대한 설정 -->
	 <bean id ="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
			<!-- 인코딩 처리 -->
			<property name="defaultEncoding" value="UTF-8"/>
			<!-- 104857600 byte = 100MB
				기본값 : 10240 바이트
				1mb == 1024kb == 1048576 byte
			-->
			<property name="maxUploadSize" value="10000000"/>
			<property name="maxInMemorySize" value="10000000"/>
	 </bean>
	 
</beans>
