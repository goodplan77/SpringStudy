<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
   <!-- 
      log4j : 
       - 프로그램 작동시 로그를 남기기 위한 자바기반 오픈소스 라이브러리
       - 로그의 레벨을 지정하여 지정한 레벨 이상의 로그정보만 출력(기록)하는 방식으로 작동
       - 일반 출력문보다 속도나 성능면에서 최적화 되어있으며, 로그를 찍기위한 다양한 방법들을 가지고 있음.
    -->
   <!-- Appenders -->
   <appender name="console" class="org.apache.log4j.ConsoleAppender">
      <!-- 
         ConsoleAppender : 콘솔창에 로그정보를 출력하는 클래스.
         FileAppender    : 파일에 로그정보를 출력하는 클래스.
       -->
      <param name="Target" value="System.out" />
      <layout class="org.apache.log4j.PatternLayout">
         <!-- <param name="ConversionPattern" value="%-5p: %c - %m%n" /> -->
         <param name="ConversionPattern" value="%-5p:[%d{HH:mm:ss.SSS}] %C{1}.%M(%F:%L) - %m%n" />
      </layout>
      <!-- 
         %c %C : 클래스명을 표시함.
                 %C{1}의 경우
                 클래스명이 com.kh.spring.LogTest일때 LogTest의미
                 %C{2}의 경우
                 클래스명이 com.kh.spring.LogTest일때 spring.LogTest의미
           %d : 로그시간을 출력 -> java.text.SimpleDateFormat과 동일한 출력패턴을 사용함.
         %M : 로그를 수행한 메소드명    
         %m : 로그로 전달된 메세지.
         %n : 개행문자
         %F : 파일명을출력.
         %L : 라인번호를 출력
          %p : 로그이벤트명 (INFO , WARN, DEBUG...)
         - 그외 -
         %l : 로깅이 발생한 위치정보 - 링크를 제공
         %t : 로그이벤트가 발생한 쓰레드명
         %% : %를 출력하기위해 사용
         %r : 어플리케이션이 시작된 이후 로깅이 발생한 시점까지의 시간(miliseconds)
       -->
   </appender>
   
   <appender name="dailyLog" class="org.apache.log4j.DailyRollingFileAppender">
      <param name="threshold" value='info'/>
      <param name="append" value="true" />
      <!--  이어쓰기여부 (true) -->
      <param name="file" value="/logs/kh.log" />
      
      <param name='datePattern' value=".yyyyMMdd"/>
      
      <layout class="org.apache.log4j.PatternLayout">
         <!-- <param name="ConversionPattern" value="%-5p: %c - %m%n" /> -->
         <param name="ConversionPattern" value="%-5p:[%d{HH:mm:ss.SSS}] %C{1}.%M(%F:%L) - %m%n" />
      </layout>
      
   </appender>
   
   <!--
   		jdbc-remix appender 추가
   		내가 실행한 쿼리문 , 출력결과 , 전달된 매개변수정보를 콘솔창에 출력해주는 객체
   -->
    <appender name="sqlLogger" class="org.apache.log4j.ConsoleAppender">
    	<layout class = "org.apache.log4j.PatternLayout">
    		<param name="ConversionPattern" value="%-5p: %m%n"/>
    	</layout>
    </appender>
    
    <logger name = "jdbc.sqlonly" additivity="false">
    	<level value='info'/>
    	<appender-ref ref = "sqlLogger"/>
    </logger>
   
   <logger name="jdbc.resultsettable" additivity="false">
   		<level value='info'/>
    	<appender-ref ref = "sqlLogger"/>
   </logger>
   
   <!-- Application Loggers -->
   <logger name="com.kh.spring">
      <level value="info" />
   </logger>
   
   <!-- 3rdparty Loggers -->
   <logger name="org.springframework.core">
      <level value="info" />
   </logger>
   
   <logger name="org.springframework.beans">
      <level value="info" />
   </logger>
   
   <logger name="org.springframework.context">
      <level value="info" />
   </logger>

   <logger name="org.springframework.web">
      <level value="info" />
   </logger>

   <!-- Root Logger -->
   <root>
      <priority value="warn" />
      <appender-ref ref="console" />
      <appender-ref ref="dailyLog" />
   </root>
   
</log4j:configuration>

